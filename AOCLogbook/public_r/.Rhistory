"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
)
),
textAreaInput("narrative", "Narrative:", width = NULL, height = '170px'),
fileInput("file", "Attach Picture", width = NULL)
),
actionButton("incidentReset", "Clear", class="btn-lg"),
useShinyalert(),
actionButton("incidentSubmit", "Submit", class="btn-lg"),
br(), br()
)
)
)
),
## DAILY REPORT ##
tabItem(tabName = "dailyReport",
h2("Daily Report"), useShinyjs(),
div(id = "dailyReportForm",
fluidRow(
column(width = 1),
column(width = 6,
box(
title = "When", status = "primary", solidHeader = TRUE, width = NULL,
dateInput("dailyDate", "Date of event:", format = "mm-dd-yyyy", width = NULL, value = Sys.Date()),
timeInput("dailyTime", "Time of event:", seconds = FALSE,  value = Sys.time())
),
box(
title = "What", status = "primary", solidHeader = TRUE, width = NULL,
selectInput("dailyEventTag", "Event Type:",
c("Choose one",
"Example 1" = "exm1",
"Example 2" = "exm2",
"Example 3" = "exm3",
"Example 4" = "exm4"
)
),
textAreaInput(
"dailyNarrative", "Narrative:", width = NULL, height = '170px'
)
),
actionButton("dailyReportReset", "Clear", class="btn-lg"),
useShinyalert(),
actionButton("dailyReportSubmit", "Submit", class="btn-lg"),
br(), br()
)
)
)
),
## SEARCH REPORTS ##
tabItem(tabName = "searchReports",
h2("Search Reports"), useShinyjs(),
div(id = "searchForm",
fluidRow(
column(width = 1),
column(width = 6,
box(
title = "Who", status = "primary", solidHeader = TRUE, width = '250px',
textInput("searchFirstName", "First Name:", width = '400px', placeholder = "First Name"),
textInput("searchMidName", "Middle Initial:", width = '400px', placeholder = "Middle Initial"),
textInput("searchLastName", "Last Name:", width = '400px', placeholder = "Last Name"),
numericInput("searchRoomNum", "Room Number:", value = NULL, width = '400px', max = 3440 )
),
box(
title = "When", status = "primary", solidHeader = TRUE, width = '250px',
dateInput("fromSearchDate", "From:", format = "mm-dd-yyyy", value = NULL, width = '400px'),
dateInput("toSearchDate", "To:", format = "mm-dd-yyyy", value = NULL, width = '400px')
),
box(
title = "What", status = "primary", solidHeader = TRUE, width = '250px',
selectInput("searchEventTag", "Event Type:",
c("Choose one" = "",
"Alcohol offense" = "alc",
"Medical" = "emt",
"Emergency" = "emg",
"Other" = "other"
)
)
),
actionButton("SearchReset", "Clear", class="btn-lg"),
actionButton("searchButton", "Submit", class="btn-lg"),
br(), br()
)
),
fluidRow(
column(width = 1),
column(width = 12,
div(id = "searchResults",
bsModal("Search", "Search Results", "searchButton", size = "large", tableOutput('table'))
# box(
#   title = "Search", status = "primary", solidHeader = TRUE, width = '250px',
#   column(12, tableOutput('table'))
# )
),
br(), br()
)
)
)
)
)
)
)
)
runApp('GitHub/GreenBook/AOCLogbook/public_r')
shiny::runApp('GitHub/GreenBook/AOCLogbook/public_r')
library(shiny)
library(shinydashboard)
library(shinyTime)
library(RMySQL)
library(dbConnect)
library(DBI)
library(gWidgets)
library(dplyr)   # Get to work in putty
library(dbplyr)  # Get to work in putty
library(pool)    # Get to work in putty
library(shinyjs)
library(shinyalert)
library(plotly)
library(ggplot2)
library(scales)
library(grid)
library(RColorBrewer)
library(shinyBS)
runApp('GitHub/GreenBook/AOCLogbook/public_r')
shiny::runApp('GitHub/GreenBook/AOCLogbook/public_r')
shiny::runApp('GitHub/GreenBook/AOCLogbook/public_r')
shiny::runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
shinyApp(ui, server)
shinyApp(ui, server)
shinyApp(ui, server)
shinyApp(ui = ui, server = server)
runApp('C:/Users/rlr08/Desktop')
runApp('C:/Users/rlr08/Desktop')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('C:/Users/rlr08/Desktop')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
a <- Ryan
a
one <- "Ryan"
two <- "Russell"
three <- "2019-02-27"
four <- "Alc"
(one != "" && two != "" && three != "" && ((is.null(four)) == FALSE)) == TRUE
three <- 2019-02-02
three
(one != "" && two != "" && three != "" && ((is.null(four)) == FALSE)) == TRUE
if((one != "" && two != "" && three != "" && ((is.null(four)) == FALSE)) == TRUE){print("yes")}
three <- Sys.Date()
if((one != "" && two != "" && three != "" && ((is.null(four)) == FALSE)) == TRUE){print("yes")}
three
(is.null(four)) == FALSE)
(is.null(four)) == FALSE
(is.null(three)) == FALSE
((is.null(three)) == FALSE)
if((one != "" && two != "" && four != "" && ((is.null(three)) == FALSE)) == TRUE){print("yes")}
four
one <- "Ryan"
two <- "Russell"
three <- "alc"
four <- Sys.Date()
(one != "" && two != "" && three != "" && ((is.null(four)) == FALSE)) == TRUE
(one != "" && two != "" && three != "" && ((is.null(four)) == FALSE))
(one != "" && two != "" && three != "" && (is.null(four) == FALSE))
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
dfr <- data.frame(date=seq(as.Date('2018-06-11'),as.Date('2018-08-12'),by=1))
dfr$day <- factor(strftime(dfr$date,format="%a"),levels=rev(c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")))
dfr$week <- factor(strftime(dfr$date,format="%V"))
dfr$month <- factor(strftime(dfr$date,format="%B"),levels=c("June","July","August"))
dfr$ddate <- factor(strftime(dfr$date,format="%d"))
> head(dfr)
head(dfr)
dfr$comment <- "Available"
dfr$comment[dfr$date>=as.Date('2018-06-11') & dfr$date<=as.Date('2018-06-20')] <- "Limited"
dfr$comment[dfr$date>=as.Date('2018-06-21') & dfr$date<=as.Date('2018-06-29')] <- "Not available"
dfr$comment[dfr$date>=as.Date('2018-07-09') & dfr$date<=as.Date('2018-07-13')] <- "Not available"
dfr$comment[dfr$date>=as.Date('2018-08-06') & dfr$date<=as.Date('2018-08-10')] <- "Not available"
dfr$comment[dfr$day=="Sat" | dfr$day=="Sun"] <- "Weekend"
dfr$comment <- factor(dfr$comment,levels=c("Available","Limited","Not available","Weekend"))
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
library(ggplot2)
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
p
p <- ggplot(dfr,aes(x=day,y=week))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
p
p <- ggplot(dfr,aes(x=day,y=week))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
p
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
p
p
shiny::runApp('GitHub/GreenBook/AOCLogbook/public_r')
source('~/.active-rstudio-document')
p
p
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
p
plot(p)
library(ggplot2)
dfr <- data.frame(date=seq(as.Date('2018-06-11'),as.Date('2018-08-12'),by=1))
dfr$day <- factor(strftime(dfr$date,format="%a"),levels=rev(c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")))
dfr$week <- factor(strftime(dfr$date,format="%V"))
dfr$month <- factor(strftime(dfr$date,format="%B"),levels=c("June","July","August"))
dfr$ddate <- factor(strftime(dfr$date,format="%d"))
dfr$comment <- factor(dfr$comment,levels=c("Available","Limited","Not available","Weekend"))
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
plot(p)
dfr <- data.frame(date=seq(as.Date('2018-06-11'),as.Date('2018-08-12'),by=1))
dfr$day <- factor(strftime(dfr$date,format="%a"),levels=rev(c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")))
dfr$week <- factor(strftime(dfr$date,format="%V"))
dfr$month <- factor(strftime(dfr$date,format="%B"),levels=c("June","July","August"))
dfr$ddate <- factor(strftime(dfr$date,format="%d"))
dfr$comment <- factor(dfr$comment,levels=c("Available","Limited","Not available","Weekend"))
dfr
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
plot(p)
p
# plot
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
p
p
dfr$comment <- factor(dfr$comment,levels=c("Available","Limited","Not available","Weekend"))
dfr$comment <- factor(dfr$comment,levels=c("Available","Limited","Not available","Weekend"))
dfr$comment <- factor(dfr$comment,levels=c("Available","Limited","Not available","Weekend"))
dfr <- data.frame(date=seq(as.Date('2018-06-11'),as.Date('2018-08-12'),by=1))
dfr$day <- factor(strftime(dfr$date,format="%a"),levels=rev(c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")))
dfr$week <- factor(strftime(dfr$date,format="%V"))
dfr$month <- factor(strftime(dfr$date,format="%B"),levels=c("June","July","August"))
dfr$ddate <- factor(strftime(dfr$date,format="%d"))
# dfr$comment <- factor(dfr$comment,levels=c("Available","Limited","Not available","Weekend"))
# plot
p <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=comment))+
geom_text(aes(label=ddate))+
scale_fill_manual(values=c("#8dd3c7","#ffffb3","#fb8072","#d3d3d3"))+
facet_grid(~month,scales="free",space="free")+
labs(x="Week",y="")+
theme_bw(base_size=10)+
theme(legend.title=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
strip.background=element_blank(),
legend.position="top",
legend.justification="right",
legend.direction="horizontal",
legend.key.size=unit(0.3,"cm"),
legend.spacing.x=unit(0.2,"cm"))
p
shiny::runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r/test app Remove box with click')
runApp('GitHub/GreenBook/AOCLogbook/public_r/test app Remove box with click')
runApp('GitHub/GreenBook/AOCLogbook/public_r/test app Remove box with click')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
shiny::runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
i <- 1
fname <- sprintf(paste0(noquote("input$firstName%s", i)))
fname <- sprintf(paste0("input$firstName%s", i))
fname <- sprintf(paste0("input$firstName", %s, i))
fname <- sprintf("input$firstName", %s, i)
fname <- sprintf("input$firstName%s", 1)
fname
variablei <- 1
fname <- sprintf("input$firstName%s", variablei)
i <- 1
fname <- sprintf("input$firstName", %s, i)
runApp('GitHub/GreenBook/AOCLogbook/public_r')
temp1 <- noquote(sprintf("firstName%s", variablei))
fname = input$temp1
temp1
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
fname <- noquote(paste0("input", "$", temp1))
fname
fname <- paste0("input", "$", temp1)
fname
temp1
i
tes <- "Ryan"
tes
tes <- 5
tes
fname <- noquote(paste0("input", "$", sprintf("firstName%s", variablei)))
fname
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
fname
outputput$fName
output$fName
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
box(id = testId,
title = sprintf("Cadet %s", length(inserted)), status = "primary", solidHeader = TRUE, width = NULL,
textInput("firstName1", "First Name: (REQUIRED)", width = NULL, placeholder = "First Name"),
textInput("midName1", "Middle Initial:", width = NULL, placeholder = "Middle Initial"),
textInput("lastName1", "Last Name: (REQUIRED)", width = NULL, placeholder = "Last Name"),
numericInput("roomNum1", "Room Number:", value = "", width = NULL, min = 100, max = 3440 )
)
runApp('GitHub/GreenBook/AOCLogbook/public_r')
runApp('GitHub/GreenBook/AOCLogbook/public_r')
