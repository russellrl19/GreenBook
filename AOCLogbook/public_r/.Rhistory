runApp('GreenBook/AOCLogbook/public_r')
install.packages("glue")
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
shiny::runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
data <- rbind(matrix(rnorm(100, 0, 0.5), ncol = 2), + matrix(rnorm(100, 2, 0.5), ncol = 2))
data
dim(data)
head(data)
tail(data)
names(data) <- c("Person 1", "Person 2")
head(data)
names(data) <- c("Person 1", "Person 2")
colnames(data) <- c("Person 1", "Person 2")
head(data)
data
cl <- kmeans(data, 2)
cl
dim(data)
cl
shiny::runApp('GreenBook/AOCLogbook/public_r')
cl <- kmeans(data, 2)
cl
runApp('GreenBook/AOCLogbook/public_r')
cl$withinss
plot(data, col=cl$cluster)
points(cl$centers, col=1:2, pch = 8, cex=2)
golub
require(golubEsets)
data(Golub_Merge)
golub <- data.frame(Golub_Merge)[1:7129]
dim(golub)
data1 <- data.frame(golub[1042,], golub[2124])
data1
dim(data1)
golub.rearrange <- golub[, order(apply(golub, 2, var), decreasing = T)]
golub <- golub.rearrange[, 1:150]
golub
data1 <- data.frame(golub[1042,], golub[2124])
dim(data1)
dim(golub)
shiny::runApp('GreenBook/AOCLogbook/public_r')
library(shiny)
library(shinydashboard)
library(shinyTime)
library(RMySQL)
library(dbConnect)
library(DBI)
library(gWidgets)
library(shinyjs)
library(shinyalert)
library(plotly)
library(ggplot2)
library(scales)
library(glue)
library(grid)
library(RColorBrewer)
library(shinyBS)
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
shiny::runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
library( ReporteRs )
install.packages("library( ReporteRs )")
install.packages("ReporteRs ")
system("java -version")
.jinit()
.jcall('java.lang.System','S','getProperty','java.version')
require(rJava)
install.packages("rJava")
require(rJava)
.jinit()
.jcall('java.lang.System','S','getProperty','java.version')
install.packages('ReporteRs')
devtools::install_github('davidgohel/ReporteRs')
library(ReporteRs)
install.packages("ReporteRs")
install.packages("ReporteRsjars")
shiny::runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
install.packages("png")
install.packages("jpeg")
library(png, jpeg)
?shinyBS
??shinyBS
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
library(RColorBrewer)
library(scales, glue, grid, RColorBrewer)
library(scales, glue, grid, "RColorBrewer")
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
shiny::runApp('GreenBook/AOCLogbook/public_r')
runApp('GreenBook/AOCLogbook/public_r')
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
?cbind
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('C:/Users/Ryan/Desktop')
runApp('C:/Users/Ryan/Desktop')
runApp('C:/Users/Ryan/Desktop')
runApp('C:/Users/Ryan/Desktop')
runApp('C:/Users/Ryan/Desktop')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
#incidentData$Image <- createLink(incidentData$Image)
return(incidentData)
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
passwd <- "supersecret"
hash <- hashpw(passwd)
install.packages("bcrypt")
library(bcrypt)
hash <- hashpw(passwd)
hash
hash <- hashpw(passwd, gensalt(11))
hash
passwd <- "test"
hash <- hashpw(passwd, gensalt(11))
hash
runApp('Github/GreenBook/AOCLogbook/public_r')
hashpw(test)
hashpw("test")
hashpw("test")
passwd <- "test"
hash <- hashpw(passwd)
hash
identical(hash, hashpw(passwd, hash))
hashAndSaltPassword <- hashpw("test")
identical(hash, hashpw(input$password, hashAndSaltPassword))
hashAndSaltPassword <- hashpw("test")
identical(hash, hashpw("test", hashAndSaltPassword))
hashAndSaltPassword <- hashpw("test")
identical(hash, hashpw("test", hashAndSaltPassword))
hashAndSaltPassword <- hashpw("test")
hashAndSaltPassword <- hashpw("test")
identical(hashAndSaltPassword, hashpw("test", hashAndSaltPassword))
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('C:/Users/Ryan/Desktop')
runApp('C:/Users/Ryan/Desktop')
install.packages("tibble")
install.packages("tibble")
shiny::runApp('C:/Users/Ryan/Desktop')
runApp('C:/Users/Ryan/Desktop')
runApp('C:/Users/Ryan/Desktop')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
passwd <- "supersecret"
hash <- hashpw(passwd)
hash
identical(hash, hashpw(passwd, hash))
checkpw(passwd, hash)
hash11 <- hashpw(passwd, gensalt(11))
hash12 <- hashpw(passwd, gensalt(12))
hash13 <- hashpw(passwd, gensalt(13))
hash11
hash12
hash
hash
hash
hash
hash <- hashpw(passwd)
hash
hash <- hashpw(passwd)
hash
hash <- hashpw(passwd)
hash
hash <- hashpw(passwd)
hash
# Secret message as a string
passwd <- "supersecret"
# Create the hash
hash <- hashpw(passwd)
hash
## [1] "$2a$12$1G8N3Xnp11oHt0RJf7SCMeWib7DpEOgpE5lXwjE2BATHJqFFxci6u"
# To validate the hash
identical(hash, hashpw(passwd, hash))
## TRUE
# Wrapper that does the same
checkpw(passwd, hash)
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('C:/Users/Ryan/Desktop')
runApp('Github/GreenBook/AOCLogbook/public_r')
options(
mysql = list(
"host" = "localhost",
"port" = 3306,
"user" = "root",
"password" = "root"
)
)
databaseName <- "greenbook"
table <- "user"
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password
)
query <- sprintf(
paste0(
"SELECT * FROM greenbook.user;"
),
table,
paste(names(data), collapse = ", ")
)
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
if("test" %in% data$username &&
checkpw("test",
hash = data[data$username == "test", "test"])){
shinyalert("Uh oh!", "Please enter a valid username and password", type = "error")
}
if("test" %in% data$username)
{TRUE}
if("test" %in% data$username){TRUE}else{FALSE}
if("tet" %in% data$username){TRUE}else{FALSE}
if("test" %in% data$username){TRUE}else{FALSE}
if(checkpw(input$password, hash = data[data$username == input$username, input$password])){TRUE}else{FALSE}
if(checkpw(input$password, hash = (data$username == input$username, input$password))){TRUE}else{FALSE}
if(checkpw(input$password, hash = data[data$username == input$username, input$password])){TRUE}else{FALSE}
if(checkpw("test", hash = data[data$username == input$username, "test"])){TRUE}else{FALSE}
if(checkpw("test", hash = data[data$username == "test", "test"])){TRUE}else{FALSE}
if(checkpw("test", hash = (data$username == "test", "test"))){TRUE}else{FALSE}
if(checkpw("test", hash = "test")){TRUE}else{FALSE}
if(checkpw("test", hash = data[data$username == "test", "password"])){TRUE}else{FALSE}
if(checkpw("test", hash = "test")){TRUE}else{FALSE}
if("test" %in% data$username){TRUE}else{FALSE}
DATA
data
data[data$username == "test"]
data[data$username = "test"]
data[data$username == "bgcffyghxxj"]
data[data$username == "bgcf"]
data[data$username == "b"]
data[data$username == "test"]
data$username == "test"
data$password[data$username == "test"]
if(checkpw("test", hash = data$password[data$username == "test"])){TRUE}else{FALSE}
if(checkpw("test", hash = data[data$username == "test", hashpw("test")])){TRUE}else{FALSE}
hashpw("test")
checkpw("test", hash = data$password[data$username == "test", hashpw("test")])
checkpw("test", hash = hashpw("test"))
hash
hash <- hashpw("test")
checkpw("test", hash = data$password[data$username == "test", hash])
checkpw("test", hash = (data$password[data$username == "test", hash]))
data$password[data$username == "test", hash]
data[data$username == "test", hash]
data[data$username == "test", hash]
hash
databaseName <- "greenbook"
table <- "user"
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password
)
query <- sprintf(
paste0(
"SELECT * FROM greenbook.user;"
),
table,
paste(names(data), collapse = ", ")
)
data <- dbGetQuery(db, query)
dbDisconnect(db)
checkpw("test", hash = (data$password[data$username == "test", hash]))
data[data$username == "test", hash]
hash
checkpw("test", hash = hashpw("test"))
checkpw("test", hash = data[data$username == "test", hash])
checkpw("test", hash = hashpw("test"))
checkpw("test", hash = data$password[hashpw("test")])
data$password[hashpw("test") == "test"]
data$password[hashpw("test") == hash]
data[data$username == "test", hash]
data[data$username == "test", ""]
hash
data[data$username == "test", data$password == "$2a$12$QS4imH3924SgvXJJtrXdBe8dwpNOy13Lrr2t8zmhFGeYCdNCquCga"]
data$username[data$password == "$2a$12$QS4imH3924SgvXJJtrXdBe8dwpNOy13Lrr2t8zmhFGeYCdNCquCga"]
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
(input$username == data$username[data$password == hash])
("test" == data$username[data$password == hash])
if(((input$username %in% data$username == TRUE) && (input$username == data$username[data$password == hash]) == TRUE) == TRUE){print("YES")}
if((("test" %in% data$username == TRUE) && ("test" == data$username[data$password == hash]) == TRUE) == TRUE){print("YES")}
if((("test" %in% data$username == TRUE) && ("test" == data$username[data$password == hash])){print("YES")}
if(("test" %in% data$username == TRUE) && ("test" == data$username[data$password == hash])){print("YES")}
if(("test" %in% data$username == TRUE) && "test" == data$username[data$password == hash]){print("YES")}
if("test" %in% data$username && "test" == data$username[data$password == hash]){print("YES")}
if("test" %in% data$username && "test" == data$username[data$password == hash]){print("YES")}else{print("NO")}
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
?salt
??salt
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
system.time(hashpw("test", salt = gensalt(12)))
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
install.packages("quantmod")
runApp('Github/GreenBook/AOCLogbook/public_r')
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
db <- dbConnect(
MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password
)
trendQuery <- paste0(
"SELECT * FROM greenbook.incident_report
WHERE (incident_date BETWEEN '2019-01-01' AND '2019-04-18')
AND (incident_type = 'Alcohol');"
)
trendData <- dbGetQuery(db, trendQuery)
dbDisconnect(db)
trendData
trend <- as.data.frame(table(as.Date(trendData$incident_date, "%Y-%m-%d")))
names(trend) <- c("Date", "Freq")
df <- data.frame(
Date = as.Date(trend$Date, "%Y-%m-%d"),
Frequency = trend$Freq
)
renderPlot({
trend <- as.data.frame(table(as.Date(trendData$incident_date, "%Y-%m-%d")))
names(trend) <- c("Date", "Freq")
df <- data.frame(
Date = as.Date(trend$Date, "%Y-%m-%d"),
Frequency = trend$Freq
)
Date = as.Date(trend$Date, "%Y-%m-%d")
Frequency = trend$Freq
# 0. Build linear model
data(df)
model <- lm(Date ~ Frequency, data = df)
# 1. Add predictions
pred.int <- predict(model, interval = "prediction")
mydata <- cbind(df, pred.int)
# 2. Regression line + confidence intervals
library("ggplot2")
p <- ggplot(mydata, aes(x=Date, y=Frequency)) +
geom_point() +
stat_smooth(method = lm)
# 3. Add prediction intervals
p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed")
})
trend <- as.data.frame(table(as.Date(trendData$incident_date, "%Y-%m-%d")))
names(trend) <- c("Date", "Freq")
df <- data.frame(
Date = as.Date(trend$Date, "%Y-%m-%d"),
Frequency = trend$Freq
)
Date = as.Date(trend$Date, "%Y-%m-%d")
Frequency = trend$Freq
# 0. Build linear model
data(df)
model <- lm(Date ~ Frequency, data = df)
# 1. Add predictions
pred.int <- predict(model, interval = "prediction")
mydata <- cbind(df, pred.int)
# 2. Regression line + confidence intervals
library("ggplot2")
p <- ggplot(mydata, aes(x=Date, y=Frequency)) +
geom_point() +
stat_smooth(method = lm)
# 3. Add prediction intervals
p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed")
mydata <- cbind(df, pred.int)
pred.int <- predict(model, interval = "prediction")
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
shiny::runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
runApp('Github/GreenBook/AOCLogbook/public_r')
